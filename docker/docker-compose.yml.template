name: %APP_NAME%
services:
  nginx:
    container_name: %APP_NAME%-nginx
    image: nginx:latest
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx/default.conf.template:/etc/nginx/templates/default.conf.template:ro
      - ./nginx/letsencrypt:/etc/letsencrypt:ro
      - ./nginx/certbot:/var/www/certbot
    depends_on:
      - nextjs

  certbot:
    container_name: %APP_NAME%-certbot
    image: certbot/certbot:latest
    command: |
      certonly --reinstall --webroot --webroot-path=/var/www/certbot
      --email ${EMAIL} --agree-tos --no-eff-email -d ${DOMAIN}
    volumes:
      - ./nginx/letsencrypt:/etc/letsencrypt
      - ./nginx/certbot:/var/www/certbot
    depends_on:
      - nginx

  nextjs:
    container_name: %APP_NAME%-nextjs
    build: .
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis

  postgres:
    container_name: %APP_NAME%-postgres
    image: postgres:latest
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - %APP_NAME%-postgres-data:/var/lib/postgresql/data

  redis:
    container_name: %APP_NAME%-redis
    image: redis:latest
    restart: always
    ports:
      - "${REDIS_PORT}:6379"

volumes:
  %APP_NAME%-postgres-data:
